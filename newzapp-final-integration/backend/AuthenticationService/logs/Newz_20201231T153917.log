2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3ec9f8d
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3ec9f8d
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3ec9f8d
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71567f33
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c04216f
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3719360c
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@6d7b001b
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@6d7b001b
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d7b001b
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@d6b532f
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@d6b532f
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d6b532f
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@733534f9
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@733534f9
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@733534f9
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@61853c7e
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@61853c7e
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61853c7e
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@59d5a6fd
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@59d5a6fd
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@59d5a6fd
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@1e734eee
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@1e734eee
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e734eee
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@3bc20984
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@3bc20984
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3bc20984
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6bd92538
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6bd92538
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@173511ff
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@173511ff
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1ccc1026
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1ccc1026
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c901203
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@edb83f8
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@7d401cdc
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d401cdc
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@2bb31455
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2bb31455
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@6c995c5d
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c995c5d
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@53cb0bcb
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@53cb0bcb
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7574d4ad
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7574d4ad
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a55fb81
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a55fb81
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7272ee51
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7272ee51
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@762a10b6
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@762a10b6
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240a2619
2020-12-31 15:39:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240a2619
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@21516c88
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@21516c88
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@5cce40d7
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cce40d7
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@59d6642a
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@59d6642a
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@59d6642a
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3214bad
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@66b0e207
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66b0e207
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66b0e207
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@640c216b
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d40498a
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@1de5cc88
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1de5cc88
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@59262a90
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59262a90
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@c212536
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c212536
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@60928a61
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60928a61
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7e18ced7
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7e18ced7
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a0896b3
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@d108406
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@d108406
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@d108406
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c70d7f0
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c70d7f0
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c70d7f0
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@7f5ce33e
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@7aae1170
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@675ec28b
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@675ec28b
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@675ec28b
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5773d271
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5773d271
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5773d271
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@11bfffb3
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@184afb78
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@4438938e
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4438938e
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@91a2543
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@51eb0e84
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51eb0e84
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@7fc7152e
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fc7152e
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53bb71e5
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a717d79
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@28cb86b2
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@647fb583
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@647fb583
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ead1d80
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d1bf7bf
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1182413a
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d43a1b7
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b14f482
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19705650
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a785fd5
2020-12-31 15:39:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a660b34
2020-12-31 15:39:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e541ef9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38054d01]
2020-12-31 15:39:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e541ef9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72e75786]
2020-12-31 15:39:31 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72e75786] for TypeConfiguration
2020-12-31 15:39:32 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-31 15:39:36 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-12-31 15:42:17 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.] with root cause
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:42:17 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:42:17 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[Tomcat].[localhost] -
				Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 29 common frames omitted
2020-12-31 15:42:28 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.] with root cause
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:42:28 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:42:28 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[Tomcat].[localhost] -
				Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 29 common frames omitted
2020-12-31 15:44:03 [http-nio-8082-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.] with root cause
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:44:03 [http-nio-8082-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] -
				Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-12-31 15:44:03 [http-nio-8082-exec-6] ERROR o.a.c.c.C.[Tomcat].[localhost] -
				Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*"since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:453)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:520)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 29 common frames omitted
